{"version":3,"sources":["webpack:///tree-chooser.min.js","webpack:///webpack/bootstrap bd925266cfa7943a9ead?b1bf","webpack:///./src/index.js?9552","webpack:///external \"angular\"?11d2","webpack:///./src/treeChooser/index.js?b229","webpack:///./src/treeChooser/treeChooser.directive.js?c278","webpack:///./src/treeChooser/treeChooser.html?f178","webpack:///./src/treeChooser/treeChooser.controller.js?6835","webpack:///external {\"commonjs\":\"lodash\"}?ac96","webpack:///./src/treeChooserItem/index.js?b7cf","webpack:///./src/treeChooserItem/treeChooserItem.directive.js?c50f","webpack:///./src/treeChooserItem/treeChooserItem.html?6ddf","webpack:///./src/treeChooserItem/treeChooserItem.controller.js?4a9f","webpack:///./src/treeChooserItem/treeChooserItem.factory.js?f4e4"],"names":["exports","modules","__webpack_require__","moduleId","installedModules","module","id","loaded","call","m","c","p","angular","treeChooser","require","directive","controller","TreeChooser","$timeout","bindToController","controllerAs","scope","treeData","idProperty","labelProperty","childrenProperty","deselectsChildren","disableNode","filterNode","filterAutoShowLength","multiselect","ngDisabled","ngPlaceholder","onlyLeaves","restrictModel","selectsChildren","enablePills","modelAsId","disableClick","template","link","element","input","querySelector","on","event","stopPropagation","list","focusInput","focus","focusList","getListStyles","top","parentNode","offsetHeight","width","offsetWidth","scrollActive","active","scrollTop","offsetTop","$inject","TreeChooserController","$element","$scope","$window","TreeChooserItem","vm","this","_","show","shown","next","addEventListener","closeFromClick","tryShow","$event","includes","get","relatedTarget","close","filterText","reset","clearActive","removeEventListener","$apply","forEach","itemsFlat","item","setActive","setExpanded","onListKeyDown","shouldStop","keyCode","toggleSelectedActive","prev","collapseActive","expandActive","preventDefault","onTextKeyDown","isEmpty","ngModel","$viewValue","isNil","removeFromModel","findActive","start","findIndex","isActive","find","index","isShowing","first","findLast","last","isTab","isSelected","toggleSelected","setSelected","selectChildren","getPresentChildren","child","deselectChildren","getChildren","value","isLeaf","addToModel","getItem","getPresentItems","filter","items","isPresent","isMatch","setExclusions","parentMatched","setExcluded","hasAChildPresent","showAll","clearBranches","getModelAsItems","map","invoke","itemsIndex","compact","getId","push","$validate","$setViewValue","properties","remove","pop","syncModelToItems","debounce","model","$modelValue","toDelete","checkItem","createItems","flattenItems","flattenDeep","$onInit","label","children","isUndefined","isNumber","isFunction","toLower","stubFalse","$isEmpty","registerWatches","$watch","size","$watchCollection","keyBy","factory","TreeChooserItemController","chooserVm","TreeChooserItemFactory","parent","_this","excluded","expanded","selected","prototype","getLabel","isExpanded","toggleExpanded"],"mappings":"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","file":"tree-chooser.min.js","sourcesContent":["exports[\"tree-chooser\"] =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\t\n\tvar treeChooser = angular.module('treeChooser', []);\n\t\n\t__webpack_require__(2)(treeChooser);\n\t__webpack_require__(11)(treeChooser);\n\t\n\tmodule.exports = treeChooser;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"angular\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (treeChooser) {\n\t  treeChooser.directive('treeChooser', __webpack_require__(3)).controller('treeChooserController', __webpack_require__(9));\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*@ngInject*/\n\t\n\tTreeChooser.$inject = ['$timeout'];\n\tfunction TreeChooser($timeout) {\n\t  __webpack_require__(4);\n\t\n\t  var angular = __webpack_require__(1);\n\t\n\t  return {\n\t    bindToController: true,\n\t    controller: 'treeChooserController',\n\t    controllerAs: 'vm',\n\t    require: ['ngModel'],\n\t    scope: {\n\t      /**\n\t       * Tree data structure\n\t       * @type {Array.<Object>}\n\t       */\n\t      treeData: '=treeChooser',\n\t\n\t      /**\n\t       * Property that contains unique ID\n\t       * @type {string}\n\t       */\n\t      idProperty: '@',\n\t\n\t      /**\n\t       * Property that contains label\n\t       * @todo alternately support template\n\t       * @type {string}\n\t       */\n\t      labelProperty: '@',\n\t\n\t      /**\n\t       * Property that contains children array\n\t       * @type {string}\n\t       */\n\t      childrenProperty: '@',\n\t\n\t      /**\n\t       * Deselect all descendants\n\t       * @type {boolean}\n\t       */\n\t      deselectsChildren: '=?',\n\t\n\t      /**\n\t       * Function to determine if item is disabled\n\t       * @type {Function}\n\t       */\n\t      disableNode: '=?',\n\t\n\t      /**\n\t       * Function to determine if item is filtered\n\t       * @type {Function}\n\t       */\n\t      filterNode: '=?',\n\t\n\t      /**\n\t       * Show list and expand all nodes after specified length\n\t       * @type {number}\n\t       */\n\t      filterAutoShowLength: '=?',\n\t\n\t      /**\n\t       * Enable multiselection\n\t       * @type {boolean}\n\t       */\n\t      multiselect: '=?',\n\t\n\t      /**\n\t       * ngDisabled pass through\n\t       * @type {boolean}\n\t       */\n\t      ngDisabled: '=?',\n\t\n\t      /**\n\t       * ngPlaceholder pass through\n\t       * @type {boolean}\n\t       */\n\t      ngPlaceholder: '=?',\n\t\n\t      /**\n\t       * Only allow selection of leaf nodes\n\t       * @type {boolean}\n\t       */\n\t      onlyLeaves: '=?',\n\t\n\t      /**\n\t       * Restrict model to members of tree data structure\n\t       * @type {boolean}\n\t       */\n\t      restrictModel: '=?',\n\t\n\t      /**\n\t       * Select all descendants\n\t       * @type {boolean}\n\t       */\n\t      selectsChildren: '=?',\n\t\n\t      /**\n\t       * Enable pills\n\t       * @type {boolean}\n\t       */\n\t      enablePills: '=?',\n\t\n\t      /**\n\t       * Just use the ID as the model value?\n\t       * @type {boolean}\n\t       */\n\t      modelAsId: '=?',\n\t\n\t      /**\n\t       * Disable outside click to close\n\t       * @type {boolean}\n\t       */\n\t      disableClick: '=?'\n\t    },\n\t    template: __webpack_require__(8),\n\t    link: function link(scope, element) {\n\t      var input = angular.element(element[0].querySelector('.treeChooser-input input'));\n\t      input.on('click', function (event) {\n\t        event.stopPropagation();\n\t      });\n\t\n\t      var list = angular.element(element[0].querySelector('.treeChooser-list'));\n\t      list.on('click', function (event) {\n\t        event.stopPropagation();\n\t      });\n\t\n\t      scope.focusInput = function () {\n\t        $timeout(function () {\n\t          input[0].focus();\n\t        });\n\t      };\n\t\n\t      scope.focusList = function () {\n\t        $timeout(function () {\n\t          list[0].focus();\n\t        });\n\t      };\n\t\n\t      scope.getListStyles = function () {\n\t        return {\n\t          top: input[0].parentNode.offsetHeight + 'px',\n\t          width: input[0].parentNode.offsetWidth + 'px'\n\t        };\n\t      };\n\t\n\t      scope.scrollActive = function () {\n\t        $timeout(function () {\n\t          var active = element[0].querySelector('.treeChooser-active .treeChooser-label');\n\t          // If no results are shown, there won't be an active!\n\t          if (active) {\n\t            list[0].scrollTop = active.offsetTop;\n\t          }\n\t        });\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = TreeChooser;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=treeChooser> <div class=treeChooser-input ng-class=\\\"{'treeChooser-input-focused': vm.focused}\\\"> <span ng-if=vm.enablePills ng-click=\\\"vm.removeFromModel(item); focusInput();\\\" ng-repeat=\\\"item in vm.getModelAsItems()\\\"> {{item[vm.properties.label]}} </span> <input type=text ng-disabled=vm.ngDisabled ng-model=vm.filterText ng-keydown=vm.onTextKeyDown($event) ng-focus=\\\"vm.focused = true; vm.tryShow($event);\\\" ng-blur=\\\"vm.focused = false\\\" placeholder={{vm.ngPlaceholder}}> </div> <ul ng-show=vm.shown ng-keydown=vm.onListKeyDown($event) ng-style=getListStyles() class=treeChooser-list tabindex=-1> <li ng-repeat=\\\"item in vm.getPresentItems()\\\" tree-chooser-item=item></li> <li ng-if=!vm.getPresentItems().length>No match</li> </ul> </div> \";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*@ngInject*/\n\t\n\tTreeChooserController.$inject = ['$element', '$scope', '$window', 'TreeChooserItem'];\n\tfunction TreeChooserController($element, $scope, $window, TreeChooserItem) {\n\t  var vm = this,\n\t      _ = __webpack_require__(10);\n\t\n\t  // @todo create a separate directive for the list\n\t\n\t  /**\n\t   * Show the search results, add outside click handler\n\t   */\n\t  vm.show = function () {\n\t    if (vm.shown) {\n\t      return;\n\t    }\n\t\n\t    vm.shown = true;\n\t\n\t    vm.next();\n\t\n\t    // Add event listener to determine when user clicks outside of tree chooser\n\t    if (!vm.disableClick) {\n\t      $window.addEventListener('click', vm.closeFromClick);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Show on focus, unless returning from the list\n\t   * @param {Event} $event\n\t   */\n\t  vm.tryShow = function ($event) {\n\t    if (_.includes(_.get($event.relatedTarget, 'className'), 'treeChooser-list')) {\n\t      return;\n\t    }\n\t    vm.show();\n\t  };\n\t\n\t  /**\n\t   * Close the search results, remove outside click handler\n\t   */\n\t  vm.close = function () {\n\t    vm.filterText = '';\n\t    vm.reset();\n\t    vm.shown = false;\n\t    vm.clearActive();\n\t    if (!vm.disableClick) {\n\t      $window.removeEventListener('click', vm.closeFromClick);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Close on outside click\n\t   */\n\t  vm.closeFromClick = function () {\n\t    vm.close();\n\t    $scope.$apply();\n\t  };\n\t\n\t  /**\n\t   * Reset the collapsed and active state\n\t   */\n\t  vm.reset = function () {\n\t    _.forEach(vm.itemsFlat, function (item) {\n\t      item.setActive(false);\n\t      item.setExpanded(false);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Handle results keyboard navigation\n\t   * @param {Object} $event\n\t   */\n\t  vm.onListKeyDown = function ($event) {\n\t    var shouldStop = false;\n\t\n\t    switch ($event.keyCode) {\n\t      case 27:\n\t        //Escape\n\t        shouldStop = true;\n\t        vm.close();\n\t        $scope.focusInput();\n\t        break;\n\t      case 13:\n\t        //Enter\n\t        shouldStop = true;\n\t        vm.toggleSelectedActive();\n\t        vm.close();\n\t        $scope.focusInput();\n\t        break;\n\t      case 40:\n\t        //Down Arrow\n\t        shouldStop = true;\n\t        vm.next();\n\t        break;\n\t      case 38:\n\t        //Up Arrow\n\t        shouldStop = true;\n\t        vm.prev();\n\t        break;\n\t      case 37:\n\t        //Left Arrow\n\t        shouldStop = true;\n\t        vm.collapseActive();\n\t        break;\n\t      case 39:\n\t        //Right Arrow\n\t        shouldStop = true;\n\t        vm.expandActive();\n\t        break;\n\t      case 32:\n\t        //Space\n\t        shouldStop = true;\n\t        vm.toggleSelectedActive();\n\t        break;\n\t      case 9:\n\t        //Tab\n\t        vm.toggleSelectedActive(true);\n\t        vm.close();\n\t        break;\n\t    }\n\t\n\t    if (shouldStop) {\n\t      $event.preventDefault();\n\t      $event.stopPropagation();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle input keyboard navigation\n\t   * @param {Object} $event\n\t   */\n\t  vm.onTextKeyDown = function ($event) {\n\t    switch ($event.keyCode) {\n\t      case 27:\n\t        //Escape\n\t        vm.close();\n\t        break;\n\t      case 13:\n\t        //Enter\n\t        if (vm.shown) {\n\t          vm.toggleSelectedActive();\n\t        } else {\n\t          vm.show($event);\n\t        }\n\t        break;\n\t      case 40:\n\t        //Down Arrow\n\t        vm.show($event);\n\t        $scope.focusList();\n\t        break;\n\t      case 8:\n\t        //Backspace\n\t        if (_.isEmpty(vm.filterText) && (vm.multiselect ? !_.isEmpty(vm.ngModel.$viewValue) : !_.isNil(vm.ngModel.$viewValue))) {\n\t          vm.removeFromModel();\n\t        }\n\t        break;\n\t      case 9:\n\t        //Tab\n\t        vm.toggleSelectedActive(true);\n\t        vm.close();\n\t        break;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Find next visible item\n\t   */\n\t  vm.next = function () {\n\t    if (_.isEmpty(vm.itemsFlat)) {\n\t      return;\n\t    }\n\t\n\t    var active = vm.findActive();\n\t\n\t    if (!active) {\n\t      var first = _.find(vm.itemsFlat, function (item) {\n\t        return item.isShowing();\n\t      });\n\t      // If no results are shown, there's nothing to set first!\n\t      if (first) {\n\t        first.setActive(true);\n\t      }\n\t    } else {\n\t      var start = _.findIndex(vm.itemsFlat, function (item) {\n\t        return item.isActive();\n\t      });\n\t      active.setActive(false);\n\t\n\t      // @todo optimize array traversal\n\t      var next = _.find(vm.itemsFlat, function (item, index) {\n\t        return index > start && item.isShowing();\n\t      });\n\t      if (!next) {\n\t        next = _.find(vm.itemsFlat, function (item, index) {\n\t          return index < start && item.isShowing();\n\t        });\n\t      }\n\t      if (next) {\n\t        next.setActive(true);\n\t      }\n\t    }\n\t\n\t    $scope.scrollActive();\n\t  };\n\t\n\t  /**\n\t   * Find previous visible item\n\t   */\n\t  vm.prev = function () {\n\t    var active = vm.findActive();\n\t\n\t    if (!active) {\n\t      var last = _.findLast(vm.itemsFlat, function (item) {\n\t        return item.isShowing();\n\t      });\n\t      // If no results are shown, there's nothing to set last!\n\t      if (last) {\n\t        last.setActive(true);\n\t      }\n\t    } else {\n\t      var start = _.findIndex(vm.itemsFlat, function (item) {\n\t        return item.isActive();\n\t      });\n\t      active.setActive(false);\n\t\n\t      // @todo optimize array traversal\n\t      var prev = _.findLast(vm.itemsFlat, function (item, index) {\n\t        return index < start && item.isShowing();\n\t      });\n\t      if (!prev) {\n\t        prev = _.findLast(vm.itemsFlat, function (item, index) {\n\t          return index > start && item.isShowing();\n\t        });\n\t      }\n\t      if (prev) {\n\t        prev.setActive(true);\n\t      }\n\t    }\n\t\n\t    $scope.scrollActive();\n\t  };\n\t\n\t  /**\n\t   * Expand active item\n\t   */\n\t  vm.expandActive = function () {\n\t    var active = vm.findActive();\n\t    if (active) {\n\t      active.setExpanded(true);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Collapse active item\n\t   */\n\t  vm.collapseActive = function () {\n\t    var active = vm.findActive();\n\t    if (active) {\n\t      active.setExpanded(false);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set all items inactive\n\t   */\n\t  vm.clearActive = function () {\n\t    _.forEach(vm.itemsFlat, function (item) {\n\t      item.setActive(false);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Toggle selection on active item\n\t   * @param {boolean} [isTab]\n\t   */\n\t  vm.toggleSelectedActive = function (isTab) {\n\t    var active = vm.findActive();\n\t    if (active) {\n\t      // Don't unselect on tab\n\t      if (isTab && active.isSelected()) {\n\t        return;\n\t      }\n\t      vm.toggleSelected(active);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the active item\n\t   */\n\t  vm.findActive = function () {\n\t    return _.find(vm.itemsFlat, function (item) {\n\t      return item.isActive();\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Toggle selected unless disabled\n\t   */\n\t  vm.toggleSelected = function (item) {\n\t    if (vm.disableNode(item)) {\n\t      return;\n\t    }\n\t\n\t    vm.setSelected(item, !item.isSelected());\n\t    if (item.isSelected() && !vm.multiselect) {\n\t      vm.close();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Select all unfiltered children\n\t   */\n\t  vm.selectChildren = function (item) {\n\t    _.forEach(item.getPresentChildren(), function (child) {\n\t      if (!child.isSelected()) {\n\t        vm.setSelected(child, true);\n\t      }\n\t      vm.selectChildren(child);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Deselect all children\n\t   */\n\t  vm.deselectChildren = function (item) {\n\t    _.forEach(item.getChildren(), function (child) {\n\t      if (child.isSelected()) {\n\t        vm.setSelected(child, false);\n\t      }\n\t      vm.deselectChildren(child);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Set selection state\n\t   */\n\t  vm.setSelected = function (item, value) {\n\t    // Enforce leaf only restrictions if necessary\n\t    if (value && vm.onlyLeaves && !item.isLeaf()) {\n\t      value = false;\n\t    }\n\t    item.setSelected(value);\n\t    if (value) {\n\t      vm.addToModel(item);\n\t      if (vm.selectsChildren && vm.multiselect) {\n\t        vm.selectChildren(item);\n\t      }\n\t    } else {\n\t      vm.removeFromModel(item.getItem());\n\t      if (vm.deselectsChildren && vm.multiselect) {\n\t        vm.deselectChildren(item);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get top level present items\n\t   */\n\t  vm.getPresentItems = function () {\n\t    return _.filter(vm.items, function (item) {\n\t      return item.isPresent();\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Determine if visible or not\n\t   * @todo isMatch, isPresent, isExcluded, etc all needs to better naming\n\t   */\n\t  vm.isMatch = function (item) {\n\t    if (!vm.filterText) {\n\t      return true;\n\t    }\n\t    return vm.filterNode(item.getItem(), vm.filterText);\n\t  };\n\t\n\t  /**\n\t   * Recursively set exclusions so that parents of included children aren't hidden\n\t   * @param {Array} items\n\t   * @param {boolean} parentMatched\n\t   */\n\t  vm.setExclusions = function (items, parentMatched) {\n\t    _.forEach(items, function (item) {\n\t      vm.setExclusions(item.getChildren(), parentMatched || vm.isMatch(item));\n\t      item.setExcluded(!vm.isMatch(item) && !item.hasAChildPresent() && !parentMatched);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Recursively set exclusions so that parents of included children aren't hidden\n\t   */\n\t  vm.showAll = function () {\n\t    _(vm.itemsFlat).filter(function (item) {\n\t      return item.isPresent();\n\t    }).forEach(function (item) {\n\t      item.setExpanded(true);\n\t    });\n\t\n\t    vm.show();\n\t  };\n\t\n\t  /**\n\t   * Clear all no leaves\n\t   * @todo if deselect Children is enabled, won't this deselect leaves?\n\t   */\n\t  vm.clearBranches = function () {\n\t    _.forEach(vm.itemsFlat, function (item) {\n\t      if (!item.isLeaf() && item.isSelected()) {\n\t        vm.setSelected(item, false);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Get model as items because it could be ssaved as id\n\t   */\n\t  vm.getModelAsItems = function () {\n\t    return _(vm.multiselect ? vm.ngModel.$viewValue : [vm.ngModel.$viewValue]).map(function (item) {\n\t      // Can' guarantee the item still exists unless restrict model is on\n\t      return vm.modelAsId ? _.invoke(vm.itemsIndex[item], 'getItem') : item;\n\t    }).compact().value();\n\t  };\n\t\n\t  /**\n\t   * Add item to model and trigger validation\n\t   */\n\t  vm.addToModel = function (item) {\n\t    var value = vm.modelAsId ? item.getId() : item.getItem();\n\t    if (vm.multiselect) {\n\t      vm.ngModel.$viewValue.push(value);\n\t      vm.ngModel.$validate();\n\t    } else {\n\t      vm.ngModel.$setViewValue(value);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove item from model and trigger validation\n\t   */\n\t  vm.removeFromModel = function (item) {\n\t    if (!vm.multiselect) {\n\t      vm.ngModel.$setViewValue(null);\n\t    } else {\n\t      if (item) {\n\t        var id = _.get(item, vm.properties.id);\n\t        _.remove(vm.ngModel.$viewValue, function (item) {\n\t          return vm.modelAsId ? item === id : _.get(item, vm.properties.id) === id;\n\t        });\n\t      } else {\n\t        vm.ngModel.$viewValue.pop();\n\t      }\n\t      vm.ngModel.$validate();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sync model to items in case model, items or restrictModel changes\n\t   */\n\t  vm.syncModelToItems = _.debounce(function () {\n\t    _.forEach(vm.itemsFlat, function (item) {\n\t      item.setSelected(false);\n\t    });\n\t\n\t    var model = vm.multiselect ? vm.ngModel.$modelValue : [vm.ngModel.$modelValue];\n\t\n\t    var toDelete = [];\n\t    // Set selected items back to true\n\t    _.forEach(model, function (item) {\n\t      var id = vm.modelAsId ? item : _.get(item, vm.properties.id);\n\t      var checkItem = vm.itemsIndex[id];\n\t      if (checkItem) {\n\t        checkItem.setSelected(true);\n\t      } else if (vm.restrictModel) {\n\t        toDelete.push(item);\n\t      }\n\t    });\n\t\n\t    _.forEach(toDelete, function (item) {\n\t      vm.removeFromModel(item);\n\t    });\n\t\n\t    // This is debounced, so ensure scope is applied!\n\t    $scope.$apply();\n\t  });\n\t\n\t  /**\n\t   * Create TreeChooserItem hierarchy\n\t   */\n\t  vm.createItems = function (items) {\n\t    return _.map(items, function (item) {\n\t      return new TreeChooserItem(item, null, vm.properties);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Flatten hierarchy for more efficient processing\n\t   */\n\t  vm.flattenItems = function (items) {\n\t    return _(items).map(function (item) {\n\t      return [item, vm.flattenItems(item.getChildren())];\n\t    }).flattenDeep().value();\n\t  };\n\t\n\t  /**\n\t   * Set the active element on search\n\t   */\n\t  vm.setActive = function () {\n\t    var active = vm.findActive();\n\t    if (active && active.isPresent()) {\n\t      // If currently active item is still present, don't do anything\n\t      return;\n\t    } else if (active) {\n\t      active.setActive(false);\n\t    }\n\t\n\t    var first;\n\t    if (vm.onlyLeaves) {\n\t      // Find first present leaf in flat items\n\t      first = _.find(vm.itemsFlat, function (item) {\n\t        return item.isLeaf() && item.isPresent();\n\t      });\n\t    } else {\n\t      // Find first present branch, at least one branch will be present in items\n\t      first = _.find(vm.items, function (item) {\n\t        return item.isPresent();\n\t      });\n\t    }\n\t\n\t    if (first) {\n\t      first.setActive(true);\n\t    }\n\t  };\n\t\n\t  this.$onInit = function () {\n\t    // Flag to determine whether search results are showing\n\t    vm.shown = false;\n\t\n\t    // Properties use to access special parts of item\n\t    vm.properties = {\n\t      id: vm.idProperty || 'id',\n\t      label: vm.labelProperty || 'label',\n\t      children: vm.childrenProperty || 'children'\n\t    };\n\t\n\t    // Enable multiselect by default\n\t    if (_.isUndefined(vm.multiselect)) {\n\t      vm.multiselect = true;\n\t    }\n\t    // Disable only leaves by default\n\t    if (_.isUndefined(vm.onlyLeaves)) {\n\t      vm.onlyLeaves = false;\n\t    }\n\t    // Disable selects children by default\n\t    if (_.isUndefined(vm.selectsChildren)) {\n\t      vm.selectsChildren = false;\n\t    }\n\t    // Disable deselects children by default\n\t    if (_.isUndefined(vm.deselectsChildren)) {\n\t      vm.deselectsChildren = false;\n\t    }\n\t    // Disable restrict model by default\n\t    if (_.isUndefined(vm.restrictModel)) {\n\t      vm.restrictModel = false;\n\t    }\n\t    // Enable pills by default\n\t    if (_.isUndefined(vm.enablePills)) {\n\t      vm.enablePills = true;\n\t    }\n\t    // Save ID to model by default\n\t    if (_.isUndefined(vm.modelAsId)) {\n\t      vm.modelAsId = true;\n\t    }\n\t    // Auto show after specified filter text length\n\t    if (!_.isNumber(vm.filterAutoShowLength)) {\n\t      vm.filterAutoShowLength = 2;\n\t    }\n\t    // Default filter node function\n\t    if (!_.isFunction(vm.filterNode)) {\n\t      vm.filterNode = function (item, filterText) {\n\t        return _.includes(_.toLower(_.get(item, vm.properties.label)), _.toLower(filterText));\n\t      };\n\t    }\n\t    // Default disable node function\n\t    if (!_.isFunction(vm.disableNode)) {\n\t      vm.disableNode = _.stubFalse;\n\t    }\n\t    // Default to enable close to click\n\t    if (!_.isUndefined(vm.disableClick)) {\n\t      vm.disableClick = false;\n\t    }\n\t\n\t    // Get access to ngModel\n\t    vm.ngModel = $element.controller('ngModel');\n\t    // And override $isEmpty to account for array emptiness if multiselect\n\t    if (vm.multiselect) {\n\t      vm.ngModel.$isEmpty = _.isEmpty;\n\t    }\n\t\n\t    this.registerWatches();\n\t  };\n\t\n\t  this.registerWatches = function () {\n\t    /**\n\t     * Update exclusions on filter text change\n\t     */\n\t    $scope.$watch('vm.filterText', function () {\n\t      vm.setExclusions(vm.items);\n\t      if (_.size(vm.filterText) >= vm.filterAutoShowLength) {\n\t        vm.showAll();\n\t      }\n\t      vm.setActive();\n\t    });\n\t\n\t    /**\n\t     * Sync on model change\n\t     */\n\t    $scope.$watchCollection('vm.ngModel.$modelValue', function () {\n\t      vm.syncModelToItems();\n\t    });\n\t\n\t    /**\n\t     * Sync on items change\n\t     */\n\t    $scope.$watch('vm.treeData', function () {\n\t      // @todo is this manual GC needed?\n\t      _.forEach(vm.itemsFlat, function (item, index) {\n\t        delete vm.itemsFlat[index];\n\t      });\n\t\n\t      // Create chooser items, so the underlying model is not touched\n\t      vm.items = vm.createItems(vm.treeData);\n\t      // Flatten into a sorted list for easier navigation\n\t      vm.itemsFlat = vm.flattenItems(vm.items);\n\t      // Item index\n\t      vm.itemsIndex = _.keyBy(vm.itemsFlat, function (item) {\n\t        return item.getId();\n\t      });\n\t\n\t      vm.syncModelToItems();\n\t    });\n\t\n\t    /**\n\t     * Sync on restrict model\n\t     */\n\t    $scope.$watch('vm.restrictModel', function (value) {\n\t      if (value) {\n\t        vm.syncModelToItems();\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Deselect branches on only leaves true\n\t     */\n\t    $scope.$watch('vm.onlyLeaves', function (value) {\n\t      if (value) {\n\t        vm.clearBranches();\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Disable results on disable\n\t     */\n\t    $scope.$watch('vm.ngDisabled', function (value) {\n\t      if (value) {\n\t        vm.close();\n\t      }\n\t    });\n\t  };\n\t}\n\t\n\tmodule.exports = TreeChooserController;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"lodash\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (treeChooser) {\n\t  treeChooser.directive('treeChooserItem', __webpack_require__(12)).controller('treeChooserItemController', __webpack_require__(14)).factory('TreeChooserItem', __webpack_require__(15));\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction TreeChooserItem() {\n\t  return {\n\t    bindToController: true,\n\t    controller: 'treeChooserItemController',\n\t    controllerAs: 'vm',\n\t    require: '^treeChooser',\n\t    scope: {\n\t      item: '=treeChooserItem'\n\t    },\n\t    template: __webpack_require__(13)\n\t  };\n\t}\n\t\n\tmodule.exports = TreeChooserItem;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<span class=treeChooser-item ng-class=\\\"{'treeChooser-selected': vm.item.isSelected(), 'treeChooser-active': vm.item.isActive()}\\\"> <span class=treeChooser-expansion ng-click=\\\"vm.chooserVm.clearActive(); vm.item.setActive(true); vm.item.toggleExpanded()\\\"> <span ng-show=\\\"vm.item.hasAChildPresent() && vm.item.isExpanded()\\\" class=treeChooser-expanded>-</span> <span ng-show=\\\"vm.item.hasAChildPresent() && !vm.item.isExpanded()\\\" class=treeChooser-collapsed>+</span> </span> <span class=treeChooser-label ng-class=\\\"{'treeChooser-disabled': vm.chooserVm.disableNode(vm.item)}\\\" ng-click=\\\"vm.chooserVm.clearActive(); vm.item.setActive(true); vm.chooserVm.toggleSelected(vm.item)\\\"> {{vm.item.getLabel()}} </span> <ul ng-if=vm.item.isExpanded()> <li ng-repeat=\\\"item in vm.item.getPresentChildren()\\\" tree-chooser-item=item></li> </ul> </span> \";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/*@ngInject*/\n\t\n\tTreeChooserItemController.$inject = ['$element'];\n\tfunction TreeChooserItemController($element) {\n\t  var vm = this;\n\t  vm.chooserVm = $element.controller('treeChooser');\n\t}\n\t\n\tmodule.exports = TreeChooserItemController;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction TreeChooserItemFactory() {\n\t  var _ = __webpack_require__(10);\n\t\n\t  function TreeChooserItem(item, parent, properties) {\n\t    var _this = this;\n\t\n\t    this.item = item; // @todo use this for templates\n\t\n\t    this.properties = properties;\n\t    this.id = _.get(this.item, this.properties.id);\n\t    this.label = _.get(this.item, this.properties.label);\n\t\n\t    this.parent = parent;\n\t\n\t    this.active = false;\n\t    this.excluded = false;\n\t    this.expanded = false;\n\t    this.selected = false;\n\t\n\t    var children = _.get(item, properties.children);\n\t    this.children = _.map(children, function (child) {\n\t      return new TreeChooserItem(child, _this, properties);\n\t    });\n\t  }\n\t\n\t  TreeChooserItem.prototype.getItem = function () {\n\t    return this.item;\n\t  };\n\t\n\t  TreeChooserItem.prototype.getChildren = function () {\n\t    return this.children;\n\t  };\n\t\n\t  TreeChooserItem.prototype.hasAChildPresent = function () {\n\t    return !!_.find(this.getChildren(), function (child) {\n\t      return child.isPresent();\n\t    });\n\t  };\n\t\n\t  TreeChooserItem.prototype.getPresentChildren = function () {\n\t    return _.filter(this.getChildren(), function (child) {\n\t      return child.isPresent();\n\t    });\n\t  };\n\t\n\t  TreeChooserItem.prototype.getId = function () {\n\t    return this.id;\n\t  };\n\t\n\t  TreeChooserItem.prototype.getLabel = function () {\n\t    return this.label;\n\t  };\n\t\n\t  TreeChooserItem.prototype.isActive = function () {\n\t    return this.active;\n\t  };\n\t\n\t  TreeChooserItem.prototype.isLeaf = function () {\n\t    return _.isEmpty(this.children);\n\t  };\n\t\n\t  TreeChooserItem.prototype.isShowing = function () {\n\t    return this.isPresent() && (!this.parent || this.parent.isExpanded());\n\t  };\n\t\n\t  TreeChooserItem.prototype.isPresent = function () {\n\t    return !this.excluded;\n\t  };\n\t\n\t  TreeChooserItem.prototype.isExpanded = function () {\n\t    return this.expanded;\n\t  };\n\t\n\t  TreeChooserItem.prototype.isSelected = function () {\n\t    return this.selected;\n\t  };\n\t\n\t  TreeChooserItem.prototype.setActive = function (value) {\n\t    this.active = value;\n\t  };\n\t\n\t  TreeChooserItem.prototype.setExcluded = function (value) {\n\t    this.excluded = value;\n\t  };\n\t\n\t  TreeChooserItem.prototype.setExpanded = function (value) {\n\t    this.expanded = value;\n\t  };\n\t\n\t  TreeChooserItem.prototype.setSelected = function (value) {\n\t    this.selected = value;\n\t  };\n\t\n\t  TreeChooserItem.prototype.toggleExpanded = function () {\n\t    this.expanded = !this.expanded;\n\t  };\n\t\n\t  return TreeChooserItem;\n\t}\n\t\n\tmodule.exports = TreeChooserItemFactory;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// tree-chooser.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bd925266cfa7943a9ead","var angular = require('angular');\n\nvar treeChooser = angular.module('treeChooser', []);\n\nrequire('./treeChooser')(treeChooser);\nrequire('./treeChooserItem')(treeChooser);\n\nmodule.exports = treeChooser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"angular\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 1\n// module chunks = 0 1","'use strict';\n\nmodule.exports = function (treeChooser) {\n  treeChooser\n    .directive('treeChooser', require('./treeChooser.directive'))\n    .controller('treeChooserController', require('./treeChooser.controller'));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooser/index.js","'use strict';\n\n/*@ngInject*/\nfunction TreeChooser($timeout) {\n  require('./treeChooser.css');\n\n  var angular = require('angular');\n\n  return {\n    bindToController: true,\n    controller: 'treeChooserController',\n    controllerAs: 'vm',\n    require: ['ngModel'],\n    scope: {\n      /**\n       * Tree data structure\n       * @type {Array.<Object>}\n       */\n      treeData: '=treeChooser',\n\n      /**\n       * Property that contains unique ID\n       * @type {string}\n       */\n      idProperty: '@',\n\n      /**\n       * Property that contains label\n       * @todo alternately support template\n       * @type {string}\n       */\n      labelProperty: '@',\n\n      /**\n       * Property that contains children array\n       * @type {string}\n       */\n      childrenProperty: '@',\n\n      /**\n       * Deselect all descendants\n       * @type {boolean}\n       */\n      deselectsChildren: '=?',\n\n      /**\n       * Function to determine if item is disabled\n       * @type {Function}\n       */\n      disableNode: '=?',\n\n      /**\n       * Function to determine if item is filtered\n       * @type {Function}\n       */\n      filterNode: '=?',\n\n      /**\n       * Show list and expand all nodes after specified length\n       * @type {number}\n       */\n      filterAutoShowLength: '=?',\n\n      /**\n       * Enable multiselection\n       * @type {boolean}\n       */\n      multiselect: '=?',\n\n      /**\n       * ngDisabled pass through\n       * @type {boolean}\n       */\n      ngDisabled: '=?',\n\n      /**\n       * ngPlaceholder pass through\n       * @type {boolean}\n       */\n      ngPlaceholder: '=?',\n\n      /**\n       * Only allow selection of leaf nodes\n       * @type {boolean}\n       */\n      onlyLeaves: '=?',\n\n      /**\n       * Restrict model to members of tree data structure\n       * @type {boolean}\n       */\n      restrictModel: '=?',\n\n      /**\n       * Select all descendants\n       * @type {boolean}\n       */\n      selectsChildren: '=?',\n\n      /**\n       * Enable pills\n       * @type {boolean}\n       */\n      enablePills: '=?',\n\n      /**\n       * Just use the ID as the model value?\n       * @type {boolean}\n       */\n      modelAsId: '=?',\n\n      /**\n       * Disable outside click to close\n       * @type {boolean}\n       */\n      disableClick: '=?'\n    },\n    template: require('./treeChooser.html'),\n    link: function (scope, element) {\n      var input = angular.element(element[0].querySelector('.treeChooser-input input'));\n      input.on('click', function (event) {\n        event.stopPropagation();\n      });\n\n      var list = angular.element(element[0].querySelector('.treeChooser-list'));\n      list.on('click', function (event) {\n        event.stopPropagation();\n      });\n\n      scope.focusInput = function () {\n        $timeout(function () {\n          input[0].focus();\n        });\n      };\n\n      scope.focusList = function () {\n        $timeout(function () {\n          list[0].focus();\n        });\n      };\n\n      scope.getListStyles = function () {\n        return {\n          top: input[0].parentNode.offsetHeight + 'px',\n          width: input[0].parentNode.offsetWidth + 'px'\n        };\n      };\n\n      scope.scrollActive = function () {\n        $timeout(function () {\n          var active = element[0].querySelector('.treeChooser-active .treeChooser-label');\n          // If no results are shown, there won't be an active!\n          if (active) {\n            list[0].scrollTop = active.offsetTop;\n          }\n        });\n      };\n    }\n  };\n}\n\nmodule.exports = TreeChooser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooser/treeChooser.directive.js","module.exports = \"<div class=treeChooser> <div class=treeChooser-input ng-class=\\\"{'treeChooser-input-focused': vm.focused}\\\"> <span ng-if=vm.enablePills ng-click=\\\"vm.removeFromModel(item); focusInput();\\\" ng-repeat=\\\"item in vm.getModelAsItems()\\\"> {{item[vm.properties.label]}} </span> <input type=text ng-disabled=vm.ngDisabled ng-model=vm.filterText ng-keydown=vm.onTextKeyDown($event) ng-focus=\\\"vm.focused = true; vm.tryShow($event);\\\" ng-blur=\\\"vm.focused = false\\\" placeholder={{vm.ngPlaceholder}}> </div> <ul ng-show=vm.shown ng-keydown=vm.onListKeyDown($event) ng-style=getListStyles() class=treeChooser-list tabindex=-1> <li ng-repeat=\\\"item in vm.getPresentItems()\\\" tree-chooser-item=item></li> <li ng-if=!vm.getPresentItems().length>No match</li> </ul> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/treeChooser/treeChooser.html\n// module id = 8\n// module chunks = 0 1","'use strict';\n\n/*@ngInject*/\nfunction TreeChooserController(\n  $element,\n  $scope,\n  $window,\n  TreeChooserItem\n) {\n  var vm = this,\n    _ = require('lodash');\n\n  // @todo create a separate directive for the list\n\n  /**\n   * Show the search results, add outside click handler\n   */\n  vm.show = function () {\n    if (vm.shown) {\n      return;\n    }\n\n    vm.shown = true;\n\n    vm.next();\n\n    // Add event listener to determine when user clicks outside of tree chooser\n    if (!vm.disableClick) {\n      $window.addEventListener('click', vm.closeFromClick);\n    }\n  };\n\n  /**\n   * Show on focus, unless returning from the list\n   * @param {Event} $event\n   */\n  vm.tryShow = function ($event) {\n    if (_.includes(_.get($event.relatedTarget, 'className'), 'treeChooser-list')) {\n      return;\n    }\n    vm.show();\n  };\n\n  /**\n   * Close the search results, remove outside click handler\n   */\n  vm.close = function () {\n    vm.filterText = '';\n    vm.reset();\n    vm.shown = false;\n    vm.clearActive();\n    if (!vm.disableClick) {\n      $window.removeEventListener('click', vm.closeFromClick);\n    }\n  };\n\n  /**\n   * Close on outside click\n   */\n  vm.closeFromClick = function () {\n    vm.close();\n    $scope.$apply();\n  };\n\n  /**\n   * Reset the collapsed and active state\n   */\n  vm.reset = function () {\n    _.forEach(vm.itemsFlat, function (item) {\n      item.setActive(false);\n      item.setExpanded(false);\n    });\n  };\n\n  /**\n   * Handle results keyboard navigation\n   * @param {Object} $event\n   */\n  vm.onListKeyDown = function ($event) {\n    var shouldStop = false;\n\n    switch ($event.keyCode) {\n      case 27: //Escape\n        shouldStop = true;\n        vm.close();\n        $scope.focusInput();\n        break;\n      case 13: //Enter\n        shouldStop = true;\n        vm.toggleSelectedActive();\n        vm.close();\n        $scope.focusInput();\n        break;\n      case 40: //Down Arrow\n        shouldStop = true;\n        vm.next();\n        break;\n      case 38: //Up Arrow\n        shouldStop = true;\n        vm.prev();\n        break;\n      case 37: //Left Arrow\n        shouldStop = true;\n        vm.collapseActive();\n        break;\n      case 39: //Right Arrow\n        shouldStop = true;\n        vm.expandActive();\n        break;\n      case 32: //Space\n        shouldStop = true;\n        vm.toggleSelectedActive();\n        break;\n      case 9: //Tab\n        vm.toggleSelectedActive(true);\n        vm.close();\n        break;\n    }\n\n    if (shouldStop) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n  };\n\n  /**\n   * Handle input keyboard navigation\n   * @param {Object} $event\n   */\n  vm.onTextKeyDown = function ($event) {\n    switch ($event.keyCode) {\n      case 27: //Escape\n        vm.close();\n        break;\n      case 13: //Enter\n        if (vm.shown) {\n          vm.toggleSelectedActive();\n        } else {\n          vm.show($event);\n        }\n        break;\n      case 40: //Down Arrow\n        vm.show($event);\n        $scope.focusList();\n        break;\n      case 8: //Backspace\n        if (_.isEmpty(vm.filterText) && (vm.multiselect ? !_.isEmpty(vm.ngModel.$viewValue) : !_.isNil(vm.ngModel.$viewValue))) {\n          vm.removeFromModel();\n        }\n        break;\n      case 9: //Tab\n        vm.toggleSelectedActive(true);\n        vm.close();\n        break;\n    }\n  };\n\n  /**\n   * Find next visible item\n   */\n  vm.next = function () {\n    if (_.isEmpty(vm.itemsFlat)) {\n      return;\n    }\n\n    var active = vm.findActive();\n\n    if (!active) {\n      var first = _.find(vm.itemsFlat, function (item) {\n        return item.isShowing();\n      });\n      // If no results are shown, there's nothing to set first!\n      if (first) {\n        first.setActive(true);\n      }\n    } else {\n      var start = _.findIndex(vm.itemsFlat, function (item) {\n        return item.isActive();\n      });\n      active.setActive(false);\n\n      // @todo optimize array traversal\n      var next = _.find(vm.itemsFlat, function (item, index) {\n        return index > start && item.isShowing();\n      });\n      if (!next) {\n        next = _.find(vm.itemsFlat, function (item, index) {\n          return index < start && item.isShowing();\n        });\n      }\n      if (next) {\n        next.setActive(true);\n      }\n    }\n\n    $scope.scrollActive();\n  };\n\n  /**\n   * Find previous visible item\n   */\n  vm.prev = function () {\n    var active = vm.findActive();\n\n    if (!active) {\n      var last = _.findLast(vm.itemsFlat, function (item) {\n        return item.isShowing();\n      });\n      // If no results are shown, there's nothing to set last!\n      if (last) {\n        last.setActive(true);\n      }\n    } else {\n      var start = _.findIndex(vm.itemsFlat, function (item) {\n        return item.isActive();\n      });\n      active.setActive(false);\n\n      // @todo optimize array traversal\n      var prev = _.findLast(vm.itemsFlat, function (item, index) {\n        return index < start && item.isShowing();\n      });\n      if (!prev) {\n        prev = _.findLast(vm.itemsFlat, function (item, index) {\n          return index > start && item.isShowing();\n        });\n      }\n      if (prev) {\n        prev.setActive(true);\n      }\n    }\n\n    $scope.scrollActive();\n  };\n\n  /**\n   * Expand active item\n   */\n  vm.expandActive = function () {\n    var active = vm.findActive();\n    if (active) {\n      active.setExpanded(true);\n    }\n  };\n\n  /**\n   * Collapse active item\n   */\n  vm.collapseActive = function () {\n    var active = vm.findActive();\n    if (active) {\n      active.setExpanded(false);\n    }\n  };\n\n  /**\n   * Set all items inactive\n   */\n  vm.clearActive = function () {\n    _.forEach(vm.itemsFlat, function (item) {\n      item.setActive(false);\n    });\n  };\n\n  /**\n   * Toggle selection on active item\n   * @param {boolean} [isTab]\n   */\n  vm.toggleSelectedActive = function (isTab) {\n    var active = vm.findActive();\n    if (active) {\n      // Don't unselect on tab\n      if (isTab && active.isSelected()) {\n        return;\n      }\n      vm.toggleSelected(active);\n    }\n  };\n\n  /**\n   * Get the active item\n   */\n  vm.findActive = function () {\n    return _.find(vm.itemsFlat, function (item) {\n      return item.isActive();\n    });\n  };\n\n  /**\n   * Toggle selected unless disabled\n   */\n  vm.toggleSelected = function (item) {\n    if (vm.disableNode(item)) {\n      return;\n    }\n\n    vm.setSelected(item, !item.isSelected());\n    if (item.isSelected() && !vm.multiselect) {\n      vm.close();\n    }\n  };\n\n  /**\n   * Select all unfiltered children\n   */\n  vm.selectChildren = function (item) {\n    _.forEach(item.getPresentChildren(), function (child) {\n      if (!child.isSelected()) {\n        vm.setSelected(child, true);\n      }\n      vm.selectChildren(child);\n    });\n  };\n\n  /**\n   * Deselect all children\n   */\n  vm.deselectChildren = function (item) {\n    _.forEach(item.getChildren(), function (child) {\n      if (child.isSelected()) {\n        vm.setSelected(child, false);\n      }\n      vm.deselectChildren(child);\n    });\n  };\n\n  /**\n   * Set selection state\n   */\n  vm.setSelected = function (item, value) {\n    // Enforce leaf only restrictions if necessary\n    if (value && vm.onlyLeaves && !item.isLeaf()) {\n      value = false;\n    }\n    item.setSelected(value);\n    if (value) {\n      vm.addToModel(item);\n      if (vm.selectsChildren && vm.multiselect) {\n        vm.selectChildren(item);\n      }\n    } else {\n      vm.removeFromModel(item.getItem());\n      if (vm.deselectsChildren && vm.multiselect) {\n        vm.deselectChildren(item);\n      }\n    }\n  };\n\n  /**\n   * Get top level present items\n   */\n  vm.getPresentItems = function () {\n    return _.filter(vm.items, function (item) {\n      return item.isPresent();\n    });\n  };\n\n  /**\n   * Determine if visible or not\n   * @todo isMatch, isPresent, isExcluded, etc all needs to better naming\n   */\n  vm.isMatch = function (item) {\n    if (!vm.filterText) {\n      return true;\n    }\n    return vm.filterNode(item.getItem(), vm.filterText);\n  };\n\n  /**\n   * Recursively set exclusions so that parents of included children aren't hidden\n   * @param {Array} items\n   * @param {boolean} parentMatched\n   */\n  vm.setExclusions = function (items, parentMatched) {\n    _.forEach(items, function (item) {\n      vm.setExclusions(item.getChildren(), parentMatched || vm.isMatch(item));\n      item.setExcluded(!vm.isMatch(item) && !item.hasAChildPresent() && !parentMatched);\n    });\n  };\n\n  /**\n   * Recursively set exclusions so that parents of included children aren't hidden\n   */\n  vm.showAll = function () {\n    _(vm.itemsFlat)\n      .filter(function (item) {\n        return item.isPresent();\n      })\n      .forEach(function (item) {\n        item.setExpanded(true);\n      });\n\n    vm.show();\n  };\n\n  /**\n   * Clear all no leaves\n   * @todo if deselect Children is enabled, won't this deselect leaves?\n   */\n  vm.clearBranches = function () {\n    _.forEach(vm.itemsFlat, function (item) {\n      if (!item.isLeaf() && item.isSelected()) {\n        vm.setSelected(item, false);\n      }\n    });\n  };\n\n  /**\n   * Get model as items because it could be ssaved as id\n   */\n  vm.getModelAsItems = function () {\n    return _(vm.multiselect ? vm.ngModel.$viewValue : [vm.ngModel.$viewValue])\n      .map(function (item) {\n        // Can' guarantee the item still exists unless restrict model is on\n        return vm.modelAsId ? _.invoke(vm.itemsIndex[item], 'getItem') : item;\n      })\n      .compact()\n      .value();\n  };\n\n  /**\n   * Add item to model and trigger validation\n   */\n  vm.addToModel = function (item) {\n    var value = vm.modelAsId ? item.getId() : item.getItem();\n    if (vm.multiselect) {\n      vm.ngModel.$viewValue.push(value);\n      vm.ngModel.$validate();\n    } else {\n      vm.ngModel.$setViewValue(value);\n    }\n  };\n\n  /**\n   * Remove item from model and trigger validation\n   */\n  vm.removeFromModel = function (item) {\n    if (!vm.multiselect) {\n      vm.ngModel.$setViewValue(null);\n    } else {\n      if (item) {\n        var id = _.get(item, vm.properties.id);\n        _.remove(vm.ngModel.$viewValue, function (item) {\n          return vm.modelAsId ? item === id : _.get(item, vm.properties.id) === id;\n        });\n      } else {\n        vm.ngModel.$viewValue.pop();\n      }\n      vm.ngModel.$validate();\n    }\n  };\n\n  /**\n   * Sync model to items in case model, items or restrictModel changes\n   */\n  vm.syncModelToItems = _.debounce(function () {\n    _.forEach(vm.itemsFlat, function (item) {\n      item.setSelected(false);\n    });\n\n    var model = vm.multiselect ? vm.ngModel.$modelValue : [vm.ngModel.$modelValue];\n\n    var toDelete = [];\n    // Set selected items back to true\n    _.forEach(model, function (item) {\n      var id = vm.modelAsId ? item : _.get(item, vm.properties.id);\n      var checkItem = vm.itemsIndex[id];\n      if (checkItem) {\n        checkItem.setSelected(true);\n      } else if (vm.restrictModel) {\n        toDelete.push(item);\n      }\n    });\n\n    _.forEach(toDelete, function (item) {\n      vm.removeFromModel(item);\n    });\n\n    // This is debounced, so ensure scope is applied!\n    $scope.$apply();\n  });\n\n  /**\n   * Create TreeChooserItem hierarchy\n   */\n  vm.createItems = function (items) {\n    return _.map(items, function (item) {\n      return new TreeChooserItem(item, null, vm.properties);\n    });\n  };\n\n  /**\n   * Flatten hierarchy for more efficient processing\n   */\n  vm.flattenItems = function (items) {\n    return _(items)\n      .map(function (item) {\n        return [item, vm.flattenItems(item.getChildren())];\n      })\n      .flattenDeep()\n      .value();\n  };\n\n  /**\n   * Set the active element on search\n   */\n  vm.setActive = function () {\n    var active = vm.findActive();\n    if (active && active.isPresent()) {\n      // If currently active item is still present, don't do anything\n      return;\n    } else if (active) {\n      active.setActive(false);\n    }\n\n    var first;\n    if (vm.onlyLeaves) {\n      // Find first present leaf in flat items\n      first = _.find(vm.itemsFlat, function (item) {\n        return item.isLeaf() && item.isPresent();\n      });\n    } else {\n      // Find first present branch, at least one branch will be present in items\n      first = _.find(vm.items, function (item) {\n        return item.isPresent();\n      });\n    }\n\n    if (first) {\n      first.setActive(true);\n    }\n  };\n\n  this.$onInit = function () {\n    // Flag to determine whether search results are showing\n    vm.shown = false;\n\n    // Properties use to access special parts of item\n    vm.properties = {\n      id: vm.idProperty || 'id',\n      label: vm.labelProperty || 'label',\n      children: vm.childrenProperty || 'children'\n    };\n\n    // Enable multiselect by default\n    if (_.isUndefined(vm.multiselect)) {\n      vm.multiselect = true;\n    }\n    // Disable only leaves by default\n    if (_.isUndefined(vm.onlyLeaves)) {\n      vm.onlyLeaves = false;\n    }\n    // Disable selects children by default\n    if (_.isUndefined(vm.selectsChildren)) {\n      vm.selectsChildren = false;\n    }\n    // Disable deselects children by default\n    if (_.isUndefined(vm.deselectsChildren)) {\n      vm.deselectsChildren = false;\n    }\n    // Disable restrict model by default\n    if (_.isUndefined(vm.restrictModel)) {\n      vm.restrictModel = false;\n    }\n    // Enable pills by default\n    if (_.isUndefined(vm.enablePills)) {\n      vm.enablePills = true;\n    }\n    // Save ID to model by default\n    if (_.isUndefined(vm.modelAsId)) {\n      vm.modelAsId = true;\n    }\n    // Auto show after specified filter text length\n    if (!_.isNumber(vm.filterAutoShowLength)) {\n      vm.filterAutoShowLength = 2;\n    }\n    // Default filter node function\n    if (!_.isFunction(vm.filterNode)) {\n      vm.filterNode = function (item, filterText) {\n        return _.includes(_.toLower(_.get(item, vm.properties.label)), _.toLower(filterText));\n      };\n    }\n    // Default disable node function\n    if (!_.isFunction(vm.disableNode)) {\n      vm.disableNode = _.stubFalse;\n    }\n    // Default to enable close to click\n    if (!_.isUndefined(vm.disableClick)) {\n      vm.disableClick = false;\n    }\n\n    // Get access to ngModel\n    vm.ngModel = $element.controller('ngModel');\n    // And override $isEmpty to account for array emptiness if multiselect\n    if (vm.multiselect) {\n      vm.ngModel.$isEmpty = _.isEmpty;\n    }\n\n    this.registerWatches();\n  };\n\n  this.registerWatches = function () {\n    /**\n     * Update exclusions on filter text change\n     */\n    $scope.$watch('vm.filterText', function () {\n      vm.setExclusions(vm.items);\n      if (_.size(vm.filterText) >= vm.filterAutoShowLength) {\n        vm.showAll();\n      }\n      vm.setActive();\n    });\n\n    /**\n     * Sync on model change\n     */\n    $scope.$watchCollection('vm.ngModel.$modelValue', function () {\n      vm.syncModelToItems();\n    });\n\n    /**\n     * Sync on items change\n     */\n    $scope.$watch('vm.treeData', function () {\n      // @todo is this manual GC needed?\n      _.forEach(vm.itemsFlat, function (item, index) {\n        delete vm.itemsFlat[index];\n      });\n\n      // Create chooser items, so the underlying model is not touched\n      vm.items = vm.createItems(vm.treeData);\n      // Flatten into a sorted list for easier navigation\n      vm.itemsFlat = vm.flattenItems(vm.items);\n      // Item index\n      vm.itemsIndex = _.keyBy(vm.itemsFlat, function (item) {\n        return item.getId();\n      });\n\n      vm.syncModelToItems();\n    });\n\n    /**\n     * Sync on restrict model\n     */\n    $scope.$watch('vm.restrictModel', function (value) {\n      if (value) {\n        vm.syncModelToItems();\n      }\n    });\n\n    /**\n     * Deselect branches on only leaves true\n     */\n    $scope.$watch('vm.onlyLeaves', function (value) {\n      if (value) {\n        vm.clearBranches();\n      }\n    });\n\n    /**\n     * Disable results on disable\n     */\n    $scope.$watch('vm.ngDisabled', function (value) {\n      if (value) {\n        vm.close();\n      }\n    });\n  };\n}\n\nmodule.exports = TreeChooserController;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooser/treeChooser.controller.js","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"lodash\"}\n// module id = 10\n// module chunks = 0 1","'use strict';\n\nmodule.exports = function (treeChooser) {\n  treeChooser\n    .directive('treeChooserItem', require('./treeChooserItem.directive'))\n    .controller('treeChooserItemController', require('./treeChooserItem.controller'))\n    .factory('TreeChooserItem', require('./treeChooserItem.factory'));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooserItem/index.js","'use strict';\n\nfunction TreeChooserItem() {\n  return {\n    bindToController: true,\n    controller: 'treeChooserItemController',\n    controllerAs: 'vm',\n    require: '^treeChooser',\n    scope: {\n      item: '=treeChooserItem'\n    },\n    template: require('./treeChooserItem.html'),\n  };\n}\n\nmodule.exports = TreeChooserItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooserItem/treeChooserItem.directive.js","module.exports = \"<span class=treeChooser-item ng-class=\\\"{'treeChooser-selected': vm.item.isSelected(), 'treeChooser-active': vm.item.isActive()}\\\"> <span class=treeChooser-expansion ng-click=\\\"vm.chooserVm.clearActive(); vm.item.setActive(true); vm.item.toggleExpanded()\\\"> <span ng-show=\\\"vm.item.hasAChildPresent() && vm.item.isExpanded()\\\" class=treeChooser-expanded>-</span> <span ng-show=\\\"vm.item.hasAChildPresent() && !vm.item.isExpanded()\\\" class=treeChooser-collapsed>+</span> </span> <span class=treeChooser-label ng-class=\\\"{'treeChooser-disabled': vm.chooserVm.disableNode(vm.item)}\\\" ng-click=\\\"vm.chooserVm.clearActive(); vm.item.setActive(true); vm.chooserVm.toggleSelected(vm.item)\\\"> {{vm.item.getLabel()}} </span> <ul ng-if=vm.item.isExpanded()> <li ng-repeat=\\\"item in vm.item.getPresentChildren()\\\" tree-chooser-item=item></li> </ul> </span> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/treeChooserItem/treeChooserItem.html\n// module id = 13\n// module chunks = 0 1","'use strict';\n\n/*@ngInject*/\nfunction TreeChooserItemController ($element) {\n  var vm = this;\n  vm.chooserVm = $element.controller('treeChooser');\n}\n\nmodule.exports = TreeChooserItemController;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooserItem/treeChooserItem.controller.js","'use strict';\n\nfunction TreeChooserItemFactory () {\n  var _ = require('lodash');\n\n  function TreeChooserItem(item, parent, properties) {\n    this.item = item; // @todo use this for templates\n\n    this.properties = properties;\n    this.id = _.get(this.item, this.properties.id);\n    this.label = _.get(this.item, this.properties.label);\n\n    this.parent = parent;\n\n    this.active = false;\n    this.excluded = false;\n    this.expanded = false;\n    this.selected = false;\n\n    var children = _.get(item, properties.children);\n    this.children = _.map(children, (child) => {\n      return new TreeChooserItem(child, this, properties);\n    });\n  }\n\n  TreeChooserItem.prototype.getItem = function () {\n    return this.item;\n  };\n\n  TreeChooserItem.prototype.getChildren = function () {\n    return this.children;\n  };\n\n  TreeChooserItem.prototype.hasAChildPresent = function () {\n    return !!_.find(this.getChildren(), function (child) {\n      return child.isPresent();\n    });\n  };\n\n  TreeChooserItem.prototype.getPresentChildren = function () {\n    return _.filter(this.getChildren(), function (child) {\n      return child.isPresent();\n    });\n  };\n\n  TreeChooserItem.prototype.getId = function () {\n    return this.id;\n  };\n\n  TreeChooserItem.prototype.getLabel = function () {\n    return this.label;\n  };\n\n  TreeChooserItem.prototype.isActive = function () {\n    return this.active;\n  };\n\n  TreeChooserItem.prototype.isLeaf = function () {\n    return _.isEmpty(this.children);\n  };\n\n  TreeChooserItem.prototype.isShowing = function () {\n    return this.isPresent() && (!this.parent || this.parent.isExpanded());\n  };\n\n  TreeChooserItem.prototype.isPresent = function () {\n    return !this.excluded;\n  };\n\n  TreeChooserItem.prototype.isExpanded = function () {\n    return this.expanded;\n  };\n\n  TreeChooserItem.prototype.isSelected = function () {\n    return this.selected;\n  };\n\n  TreeChooserItem.prototype.setActive = function (value) {\n    this.active = value;\n  };\n\n  TreeChooserItem.prototype.setExcluded = function (value) {\n    this.excluded = value;\n  };\n\n  TreeChooserItem.prototype.setExpanded = function (value) {\n    this.expanded = value;\n  };\n\n  TreeChooserItem.prototype.setSelected = function (value) {\n    this.selected = value;\n  };\n\n  TreeChooserItem.prototype.toggleExpanded = function () {\n    this.expanded = !this.expanded;\n  };\n\n  return TreeChooserItem;\n}\n\nmodule.exports = TreeChooserItemFactory;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeChooserItem/treeChooserItem.factory.js"],"sourceRoot":""}